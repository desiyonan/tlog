[{"content":"简介 主要记录了使用 spring 重定向时遇到的问题，以及对 HTTP 3xx 中重定向状态码意义解读记录。\n`\n`\n前言","permalink":"https://zone.desiyonan.tech/2021/06/202106161641333/","summary":"\u003ch2 id=\"简介\"\u003e简介\u003c/h2\u003e\n\u003cp\u003e主要记录了使用 \u003ccode\u003espring\u003c/code\u003e 重定向时遇到的问题，以及对 \u003ccode\u003eHTTP\u003c/code\u003e \u003ccode\u003e3xx\u003c/code\u003e 中重定向状态码意义解读记录。\u003c/p\u003e\n\u003cp\u003e`\u003c/p\u003e","title":"Spring"},{"content":"简介  .java 文件编译后的 .class 文件内容究竟是怎样的？JVM 又是如果识别并加载 .class 文件的\n环境 Win10、Nixos JDK1.8\nClass文件内容 windows 下用 Powershell 查看字节码内容(十六进制)\nPS\u0026gt; cat Demo.java; public class Demo{} PS\u0026gt; javac.exe Demo.java; Format-Hex Demo.class Path: D:\\tmp\\java\\Demo.class 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00000000 CA FE BA BE 00 00 00 34 00 0D 0A 00 03 00 0A 07 Êþº¾...4........ 00000010 00 0B 07 00 0C 01 00 06 3C 69 6E 69 74 3E 01 00 ........\u0026lt;init\u0026gt;.. 00000020 03 28 29 56 01 00 04 43 6F 64 65 01 00 0F 4C 69 .()V...Code...Li 00000030 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65 01 00 0A neNumberTable... 00000040 53 6F 75 72 63 65 46 69 6C 65 01 00 09 44 65 6D SourceFile...Dem 00000050 6F 2E 6A 61 76 61 0C 00 04 00 05 01 00 04 44 65 o.java........De 00000060 6D 6F 01 00 10 6A 61 76 61 2F 6C 61 6E 67 2F 4F mo...java/lang/O 00000070 62 6A 65 63 74 00 21 00 02 00 03 00 00 00 00 00 bject.!......... 00000080 01 00 01 00 04 00 05 00 01 00 06 00 00 00 1D 00 ................ 00000090 01 00 01 00 00 00 05 2A B7 00 01 B1 00 00 00 01 .......*·..±.... 000000A0 00 07 00 00 00 06 00 01 00 00 00 01 00 01 00 08 ................ 000000B0 00 00 00 02 00 09 ...... Linux 下命令行查看\n$ cat IDemo.java public interface IDemo{} $ javac IDemo.java ; hexdump IDemo.class 0000000 feca beba 0000 3400 0700 0007 0705 0600 0000010 0001 530a 756f 6372 4665 6c69 0165 0a00 0000020 4449 6d65 2e6f 616a 6176 0001 4905 6544 0000030 6f6d 0001 6a10 7661 2f61 616c 676e 4f2f 0000040 6a62 6365 0674 0001 0001 0002 0000 0000 0000050 0000 0001 0003 0000 0002 0004 000005b Class文件结构 一个完整的 class 文件大致可分为10个部分\n 魔数 版本号 常量池 3.1 常量池计数器 3.2 常量池数据区 访问标志 类索引 父类索引 接口 7.1 接口计数器 7.2 接口信息区 字段 8.1 字段计数器 8.2 字段信息区 方法 9.1 方法计数器 9.2 方法信息区 属性 10.1 属性计数器 10.2 属性信息区  关于class 文件的基本数据结构在 The Java Virtual Machine Specification (Second ed.)文档有详细的说明，如下:\nClassFile { u4 magic; u2 minor_version; u2 major_version; u2 constant_pool_count; cp_info constant_pool[constant_pool_count-1]; u2 access_flags; u2 this_class; u2 supper_class; u2 interfaces_count; u2 interfaces[interfaces_count]; u2 fields_count; field_info fields[fields_count]; u2 methods_count; method_info methods[methods_count]; u2 attributes_count; attribute_info attributes[attributes_count]; } u4: 指4个字节的无符号整型 u2: 指2个字节的无符号整型\n魔数(magic) 魔数是指某一文件格式下前几个固定字节值，一般用于识别文件格式，class文件的魔数固定为前4个字节，即：CA FE BA BE；至于它的来源和背后的故事可查阅 Wiki - Java class file 下的 Magic Number 片节\n版本号 版本号共占用4个字节，各分为2个字节的次版本号(minor_version)占第5、6字节位以及占第7、8字节位的主版本号(major_version)。版本号的作用为标识 class 文件是在具体哪个版本的 JVM 下生成的，让运行时环境的JVM确认是否可以加载此版本的class文件。\n常量池 常量池索引 常量池数据 延伸  Class 文件基本组织结构 Java class file - Wiki The class File Format  ","permalink":"https://zone.desiyonan.tech/2021/06/20210608875210/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"简介----omit-in-toc---\"\u003e简介 \u003c!-- raw HTML omitted --\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003e.java\u003c/code\u003e 文件编译后的 \u003ccode\u003e.class\u003c/code\u003e 文件内容究竟是怎样的？\u003ccode\u003eJVM\u003c/code\u003e 又是如果识别并加载 \u003ccode\u003e.class\u003c/code\u003e 文件的\u003c/p\u003e","title":"Java Class 文件解析"},{"content":"","permalink":"https://zone.desiyonan.tech/photo/","summary":"","title":"相册"},{"content":"","permalink":"https://zone.desiyonan.tech/about/","summary":"","title":"关于我"},{"content":"简介 这是我的第一篇博客，这篇文章主要讲述了我搭建个人网站，以及如何自动构建发布静态页面的过程。\n前言 最近正好整理记录的笔记，之前写的比较随意，不太好整理，而且之前早就想搭建自己的个人博客网站，正好这次刚好又时间折腾折腾。 搭建静态网站的框架网上比较多，文档和教程大部分也比较全，这次就直接选择口碑比较好也容易的 Hugo 在 Github 下搭建一个。\n安装 Hugo 在 Win10 下使用命令安装：\nscoop install hugo 验证安装:\nhugo version 这里的Scoop是 Win10 平台下的软件包管理工具之一，非常方便，感兴趣可在 GitHub或CodeChina 上查看。\n更多的安装方式和文档可以参看Hugo 官方安装教程.\n新建站点 新建站点项目\nhugo new site tech-blog Congratulations! Your new Hugo site is created in D:\\tech-blog. Just a few more steps and you\u0026#39;re ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026#34;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026#34; command. 2. Perhaps you want to add some content. You can add single files with \u0026#34;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026#34;. 3. Start the built-in live server via \u0026#34;hugo server\u0026#34;. Visit https://gohugo.io/ for quickstart guide and full documentation. 配置一款主题\nHugo主题提供了大量模板，这里用的主题是 PaperMod，详细文档(安装、配置)可以在Github上查看。\n更多的主题可以在 Hugo 主题 上查看\ncd tech-blog git init git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod --depth=1 git submodule update --init --recursive 修改配置文件 config.toml 或者 config.yaml，.toml格式配置可参考官方文档，.\\config.yaml基本内容如下\nbaseurl: \u0026#34;http://zone.desiyonan.tech\u0026#34; title: \u0026#34;DnF\u0026#39;s Zone\u0026#34; defaultContentLanguage: zh hasCJKLanguage: true theme: PaperMod # 主题 params: AuthorName: \u0026#34;DnF\u0026#34; GitHubUser: \u0026#34;desiyonan\u0026#34; 启动本地服务器\nhugo server -D Start building sites … | EN -------------------+----- Pages | 12 Paginator pages | 0 Non-page files | 0 Static files | 1 Processed images | 0 Aliases | 2 Sitemaps | 1 Cleaned | 0 Built in 35 ms Watching for changes in D:\\tech-blog\\{archetypes，content，data，layouts，static，themes} Watching for config changes in D:\\tech-blog\\config.yaml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop 现在可以直接访问 http://localhost:1313/ 查看站点，不过要看文章具体效果可以先新建测试文章\nhugo new post/test.md \u0026#39;## Test\u0026#39; | out-file -a -e utf8 .\\content\\post\\test.md 访问 http://localhost:1313/post/test 就可以看到测试效果\n最后基本仓库的初始化\ngit commit -am \u0026#34;init\u0026#34; git push -u origin master 配置 Github Pages 基本框架已经搭建完成，需要能够在公网直接访问网页还需要配置 Github Pages。\n看了网上不少的博客，大部分都是在本地编辑 .md 文档，完成后通过 hugo 命令构建输出，最后再把输出的 public 目录推送到 Github 上。\n再尝试了一两次后太繁琐了，而且也不是我想要的效果，最后在知乎上看到最理想的效果：在本地编辑 .md 文档后推送到直接仓库后就可以通过公网看到效果。详细可以看知乎上的文章，说明的很清楚，重复的字也懒得码了，这里简单说明下大致流程和需要注意的地方。\n流程的大致原理:\n简单的说就是：\n 建两个仓库: 一个放文档源码，一个放构建后的页面代码 给源码仓库添加 Action，当推送 master 代码时自动构建页面，再推送到页面仓库  需要注意：\n 放构建后的静态页面的仓库需要配置 Github Pages 两个仓库需要一对 SSH 密钥，源码仓库配置私钥，页面仓库配置公钥 Github Action配置需要根据实际情况改动下  以下是我的改动后 Action 配置内容\nname: Deploy Hugo Site to Github Pages on Master Branch on: push: branches: - master jobs: build-deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v1  # v2 does not have submodules option now with: submodules: true - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;0.83.1\u0026#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} # 这里的 ACTIONS_DEPLOY_KEY 则是上面设置 Private Key的变量名 external_repository: desiyonan/zone # Pages 远程仓库 publish_dir: \u0026#34;public\u0026#34; keep_files: false # remove existing files publish_branch: master  # deploying branch commit_message: ${{ github.event.head_commit.message }} 不同的点：\nwith: submodules: true 因为之前配置主题时是到了 git submodule，所以这里必要有，不然构建后没有主题。\n其次\nexternal_repository: desiyonan/zone # Pages 远程仓库 publish_dir: \u0026#34;public\u0026#34; external_repository 是放页面仓库，publish_dir 是构建后需要推送的目录，hugo 默认的构建目录就是 public，具体配置看下 config.toml 或者 config.yaml 下有没有\npublishdir: xxxx 不复杂，摸索个把小时就行了。两个仓库的关联配置到此位置，还需要最后一步配置页面仓库的Github Pages\n打开对应 Github 仓库页面，找到 Setting 页签，然后可以在侧边栏看到 Pages 设置\n需要配置的主要是 Source 选择分支和目录，自定义域名可以通过 Custom domain 配置，域名配置不是必须，如果配置了还需要新增 static/CNAME 文件，文件内容就是自定义的域名，中途改了几次域名就是没改文件导致访问不了网站。\nPS\u0026gt;cat static\\CNAME zone.desiyonan.tech 至此，耗时两天，一个完整的自动化部署个人博客终于搭建完了，网站的美化后面再一步步来。\n相关链接  Hugo homepage Hugo Install Hugo Docs Hugo Themes Theme PaperMod PaperMod - Github Hugo Config Scoop Github Scoop Codechina Hugo Gitee - Blog 使用Hugo搭建博客 - Blog Hugo Deploy Action  ","permalink":"https://zone.desiyonan.tech/2021/05/8df2adb7809b41c597eb2efb10ed66db/","summary":"\u003ch2 id=\"简介\"\u003e简介\u003c/h2\u003e\n\u003cp\u003e这是我的第一篇博客，这篇文章主要讲述了我搭建个人网站，以及如何自动构建发布静态页面的过程。\u003c/p\u003e","title":"Hugo+Github 搭建个人网站"}]